
Allocating common symbols
Common symbol       size              file

nuMainStack         0x2000            builds/codesegment.o
nuIdleFunc          0x4               builds/codesegment.o

Discarded input sections

 .data          0x0000000000000000        0x0 asm/rom_header.o
 .bss           0x0000000000000000        0x0 asm/rom_header.o
 .reginfo       0x0000000000000000       0x18 asm/rom_header.o
 .MIPS.abiflags
                0x0000000000000000       0x18 asm/rom_header.o
 .pdr           0x0000000000000000        0x0 asm/rom_header.o
 .gnu.attributes
                0x0000000000000000       0x10 asm/rom_header.o
 .data          0x0000000000000000        0x0 asm/entry.o
 .bss           0x0000000000000000        0x0 asm/entry.o
 .reginfo       0x0000000000000000       0x18 asm/entry.o
 .MIPS.abiflags
                0x0000000000000000       0x18 asm/entry.o
 .pdr           0x0000000000000000        0x0 asm/entry.o
 .gnu.attributes
                0x0000000000000000       0x10 asm/entry.o
 .MIPS.abiflags
                0x0000000000000000       0x18 builds/codesegment.o
 .reginfo       0x0000000000000000       0x18 builds/codesegment.o
 .sbss          0x0000000000000000        0x0 builds/codesegment.o
 .comment       0x0000000000000000       0x4b builds/codesegment.o
 .pdr           0x0000000000000000       0xe0 builds/codesegment.o
 .debug_aranges
                0x0000000000000000       0x60 builds/codesegment.o
 .debug_info    0x0000000000000000     0x1415 builds/codesegment.o
 .debug_abbrev  0x0000000000000000      0x477 builds/codesegment.o
 .debug_line    0x0000000000000000      0x211 builds/codesegment.o
 .debug_frame   0x0000000000000000      0x120 builds/codesegment.o
 .debug_str     0x0000000000000000      0x8ae builds/codesegment.o
 .gnu.attributes
                0x0000000000000000       0x10 builds/codesegment.o
 .mdebug.abi32  0x0000000000000000        0x0 builds/codesegment.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000000000                __romPos = 0x0
                0x0000000004000000                _bootSegmentStart = ADDR (.boot)
                0x000000000000a340                _bootSegmentRomStart = __romPos

.boot           0x0000000004000000     0x1000 load address 0x0000000000000000
 asm/rom_header.o(.text)
 .text          0x0000000004000000       0x40 asm/rom_header.o
 builds/boot.6102.o(.data)
 .data          0x0000000004000040      0xfc0 builds/boot.6102.o
                0x0000000004000040                _binary__usr_lib_n64_PR_bootcode_boot_6102_start
                0x0000000004001000                _binary__usr_lib_n64_PR_bootcode_boot_6102_end
                0x0000000004001000                _bootSegmentEnd = (ADDR (.boot) + SIZEOF (.boot))
                0x000000000000b340                _bootSegmentRomEnd = (__romPos + SIZEOF (.boot))
                [0x000000000000a340]                __romPos = (__romPos + SIZEOF (.boot))
                0x0000000080025c00                _codeSegmentStart = ADDR (.code)
                0x000000000000a340                _codeSegmentRomStart = __romPos

.code           0x0000000080025c00     0x9340 load address 0x0000000000001000
 asm/entry.o(.text)
 .text          0x0000000080025c00       0x50 asm/entry.o
                0x0000000080025c00                entry_point
 codesegment.o(.text)
 .text          0x0000000080025c50      0x540 builds/codesegment.o
                0x0000000080025c50                RCPInit
                0x0000000080025cfc                mainproc
                0x0000000080025d80                stage00_init
                0x0000000080025da4                stage00_update
                0x0000000080025dc8                stage00_draw
                0x0000000080025eb4                ClearBackground
                0x0000000080026080                nuBoot
 /usr/lib/n64/PR/rspboot.o(.text)
 .text          0x0000000080026190       0xd0 /usr/lib/n64/PR/rspboot.o
                0x0000000080026190                rspbootTextStart
                0x0000000080026260                rspbootTextEnd
 /usr/lib/n64/PR/gspF3DEX2.fifo.o(.text)
 .text          0x0000000080026260     0x1390 /usr/lib/n64/PR/gspF3DEX2.fifo.o
                0x0000000080026260                gspF3DEX2_fifoTextStart
                0x00000000800275f0                gspF3DEX2_fifoTextEnd
 /usr/lib/n64/PR/gspL3DEX2.fifo.o(.text)
 .text          0x00000000800275f0     0x1190 /usr/lib/n64/PR/gspL3DEX2.fifo.o
                0x00000000800275f0                gspL3DEX2_fifoTextStart
                0x0000000080028780                gspL3DEX2_fifoTextEnd
 /usr/lib/n64/PR/gspF3DEX2.Rej.fifo.o(.text)
 .text          0x0000000080028780     0x1190 /usr/lib/n64/PR/gspF3DEX2.Rej.fifo.o
                0x0000000080028780                gspF3DEX2_Rej_fifoTextStart
                0x0000000080029910                gspF3DEX2_Rej_fifoTextEnd
 /usr/lib/n64/PR/gspF3DEX2.NoN.fifo.o(.text)
 .text          0x0000000080029910     0x1390 /usr/lib/n64/PR/gspF3DEX2.NoN.fifo.o
                0x0000000080029910                gspF3DEX2_NoN_fifoTextStart
                0x000000008002aca0                gspF3DEX2_NoN_fifoTextEnd
 /usr/lib/n64/PR/gspF3DLX2.Rej.fifo.o(.text)
 .text          0x000000008002aca0     0x1190 /usr/lib/n64/PR/gspF3DLX2.Rej.fifo.o
                0x000000008002aca0                gspF3DLX2_Rej_fifoTextStart
                0x000000008002be30                gspF3DLX2_Rej_fifoTextEnd
 /usr/lib/n64/PR/gspS2DEX2.fifo.o(.text)
 .text          0x000000008002be30     0x18c0 /usr/lib/n64/PR/gspS2DEX2.fifo.o
                0x000000008002be30                gspS2DEX2_fifoTextStart
                0x000000008002d6f0                gspS2DEX2_fifoTextEnd
 codesegment.o(.data*)
 .data          0x000000008002d6f0       0x70 builds/codesegment.o
                0x000000008002d700                rspinit_dl
                0x000000008002d720                rdpinit_dl
 /usr/lib/n64/PR/rspboot.o(.data*)
 .data          0x000000008002d760        0x0 /usr/lib/n64/PR/rspboot.o
                0x000000008002d760                rspbootDataEnd
                0x000000008002d760                rspbootDataStart
 /usr/lib/n64/PR/gspF3DEX2.fifo.o(.data*)
 .data          0x000000008002d760      0x420 /usr/lib/n64/PR/gspF3DEX2.fifo.o
                0x000000008002d760                gspF3DEX2_fifoDataStart
                0x000000008002db80                gspF3DEX2_fifoDataEnd
 /usr/lib/n64/PR/gspL3DEX2.fifo.o(.data*)
 .data          0x000000008002db80      0x3f0 /usr/lib/n64/PR/gspL3DEX2.fifo.o
                0x000000008002db80                gspL3DEX2_fifoDataStart
                0x000000008002df70                gspL3DEX2_fifoDataEnd
 /usr/lib/n64/PR/gspF3DEX2.Rej.fifo.o(.data*)
 .data          0x000000008002df70      0x410 /usr/lib/n64/PR/gspF3DEX2.Rej.fifo.o
                0x000000008002df70                gspF3DEX2_Rej_fifoDataStart
                0x000000008002e380                gspF3DEX2_Rej_fifoDataEnd
 /usr/lib/n64/PR/gspF3DEX2.NoN.fifo.o(.data*)
 .data          0x000000008002e380      0x420 /usr/lib/n64/PR/gspF3DEX2.NoN.fifo.o
                0x000000008002e380                gspF3DEX2_NoN_fifoDataStart
                0x000000008002e7a0                gspF3DEX2_NoN_fifoDataEnd
 /usr/lib/n64/PR/gspF3DLX2.Rej.fifo.o(.data*)
 .data          0x000000008002e7a0      0x410 /usr/lib/n64/PR/gspF3DLX2.Rej.fifo.o
                0x000000008002e7a0                gspF3DLX2_Rej_fifoDataStart
                0x000000008002ebb0                gspF3DLX2_Rej_fifoDataEnd
 /usr/lib/n64/PR/gspS2DEX2.fifo.o(.data*)
 .data          0x000000008002ebb0      0x390 /usr/lib/n64/PR/gspS2DEX2.fifo.o
                0x000000008002ebb0                gspS2DEX2_fifoDataStart
                0x000000008002ef40                gspS2DEX2_fifoDataEnd
 codesegment.o(.rodata*)
                0x000000008002ef40                _codeSegmentEnd = (ADDR (.code) + SIZEOF (.code))
                0x0000000000013680                _codeSegmentRomEnd = (__romPos + SIZEOF (.code))
                [0x000000000000a340]                __romPos = (__romPos + SIZEOF (.code))
                0x000000008002ef40                _codeSegmentBssStart = ADDR (.code.noload)

.code.noload    0x000000008002ef40     0x4380 load address 0x000000000000a340
 codesegment.o(COMMON)
 COMMON         0x000000008002ef40     0x2000 builds/codesegment.o
                0x000000008002ef40                nuMainStack
 codesegment.o(.scommon*)
 .scommon       0x0000000080030f40        0x4 builds/codesegment.o
                0x0000000080030f40                nuIdleFunc
 codesegment.o(.bss*)
 *fill*         0x0000000080030f44        0xc 
 .bss           0x0000000080030f50     0x2370 builds/codesegment.o
                0x0000000080030f50                glist
                0x0000000080030f58                glistp
                0x00000000800332c0                . = ALIGN (0x8)
                0x00000000800332c0                _codeSegmentBssEnd = (ADDR (.code.noload) + SIZEOF (.code.noload))
                0x0000000000004380                _codeSegmentBssSize = SIZEOF (.code.noload)

/DISCARD/
 *(*)
OUTPUT(test2.elf elf32-bigmips)
